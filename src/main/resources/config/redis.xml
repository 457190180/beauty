<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-4.0.xsd 
">


    <!--Redis单机版的Java接口  Jedis -->
    <!-- <bean id="jedis" class="redis.clients.jedis.Jedis">
        <constructor-arg value="118.178.189.171" index="0" type="java.lang.String"/>
        <constructor-arg value="6379" index="1"/>
    </bean> -->

    <!-- 连接池配置 -->
    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <!-- 最大连接数 -->
        <property name="maxTotal" value="500"/>
        <!-- 最大空闲连接数 -->
        <property name="maxIdle" value="8"/>
        <!-- 最小空闲连接数-->
        <property name="minIdle" value="3"/>
        <!-- 每次释放连接的最大数目 -->
        <property name="numTestsPerEvictionRun" value="1024"/>
        <!-- 释放连接的扫描间隔（毫秒） -->
        <property name="timeBetweenEvictionRunsMillis" value="100"/>
        <!-- 连接最小空闲时间 -->
        <property name="minEvictableIdleTimeMillis" value="15000"/>
        <!-- 连接空闲多久后释放, 当空闲时间>该值 且 空闲连接>最大空闲连接数 时直接释放 -->
        <property name="softMinEvictableIdleTimeMillis" value="100"/>
        <!-- 获取连接时的最大等待毫秒数,小于零:阻塞不确定的时间,默认-1 -->
        <property name="maxWaitMillis" value="15000"/>
        <!-- 在获取连接的时候检查有效性, 默认false -->
        <property name="testOnBorrow" value="false"/>
        <!-- 在空闲时检查有效性, 默认false -->
        <property name="testWhileIdle" value="false"/>
        <!-- 连接耗尽时是否阻塞, false报异常,ture阻塞直到超时, 默认true -->
        <property name="blockWhenExhausted" value="false"/>
    </bean>

    <!-- redis单机 通过连接池 -->
    <bean id="jedisPool" class="redis.clients.jedis.JedisPool" destroy-method="close">
        <constructor-arg index="0" ref="jedisPoolConfig"></constructor-arg>
        <constructor-arg index="1" value="${redis_addr}"></constructor-arg>
        <constructor-arg index="2" value="${redis_port}"></constructor-arg>
        <constructor-arg index="3" value="${redis_max_wait}"></constructor-arg>
        <constructor-arg index="4" value="${redis_auth}"></constructor-arg>
        <constructor-arg index="5" value="0"></constructor-arg>
    </bean>
</beans>
